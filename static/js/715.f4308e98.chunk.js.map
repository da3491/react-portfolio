{"version":3,"file":"static/js/715.f4308e98.chunk.js","mappings":"kNA2BA,EA3BiB,CACfA,SAAU,CACRC,MAAO,oBACPC,MAAO,GACPC,KAAM,CAAC,KAAM,QAAS,YAAa,aACnCC,KAAM,2JACNC,SAAU,wDACVC,SAAU,mDAEZC,SAAU,CACRN,MAAO,cACPC,MAAO,wBACPC,KAAM,CAAC,KAAM,QAAS,YAAa,aACnCC,KAAM,mKACNC,SAAU,GACVC,SAAU,IAEZE,SAAU,CACRP,MAAO,iBACPC,MAAO,2BACPC,KAAM,CAAC,KAAM,QAAS,YAAa,aACnCC,KAAM,mKACNC,SAAU,GACVC,SAAU,K,2BClBRG,EAAYC,EAAAA,MAAW,kBAAM,mDAAN,IAGvBC,EAAOC,EAAAA,GAAAA,IAAH,8KAGM,SAACC,GAAD,OAAWA,EAAMC,UAAjB,IAMVC,EAAYH,EAAAA,GAAAA,IAAH,8LAUTI,EAAWJ,EAAAA,GAAAA,IAAH,uFAGRK,EAAOL,EAAAA,GAAAA,IAAH,qGAKJM,EAAQN,EAAAA,GAAAA,GAAH,sFAKLO,EAAaP,EAAAA,GAAAA,KAAH,mEACL,SAACC,GAAD,OAAWA,EAAMC,UAAjB,IAGLM,EAASR,EAAAA,GAAAA,OAAH,6KAGI,SAACC,GAAD,OAAWA,EAAMC,UAAjB,IA2DhB,EApDoB,SAAC,GAA4B,IAA1Bb,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,MAAOE,EAAW,EAAXA,KAC7BiB,GAAQC,EAAAA,EAAAA,MACd,GAAwCC,EAAAA,EAAAA,WAAS,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAYA,OAVKxB,IACHA,EAAQ,YAELC,IACHA,EAAQ,+BAELE,IACHA,EAAO,kBAIP,UAACO,EAAD,CAAMG,WAAYO,EAAMK,OAAOC,SAA/B,WACE,SAACZ,EAAD,CACEa,QAAQ,OACRC,cAAc,MACdC,IAAKC,EAAAA,IAAAA,CAAQ,YAAa7B,OAE5B,SAACc,EAAD,WACE,UAACC,EAAD,YACE,4BACE,SAACC,EAAD,UAAQjB,KACR,SAACkB,EAAD,CAAYL,WAAYO,EAAMK,OAAOM,UAArC,oDAIF,SAACZ,EAAD,CACEN,WAAYO,EAAMK,OAAOO,OACzBC,QAAS,kBAAMT,GAAgB,EAAtB,EAFX,wBAQJ,SAAC,WAAD,UACGD,IACC,SAACf,EAAD,CACE0B,QAASX,EACTvB,MAAOA,EACPC,MAAOA,EACPE,KAAMA,EACNgC,WAAY,kBAAMX,GAAgB,EAAtB,QAMvB,EClGKY,EAAYzB,EAAAA,GAAAA,IAAH,oJAwBf,EAfiB,WACf,OACE,SAACyB,EAAD,UACGC,OAAOC,KAAKC,GAAUC,KAAI,SAACC,GAAD,OACzB,SAAC,EAAD,CAEEzC,MAAOuC,EAASE,GAAKzC,MACrBC,MAAOsC,EAASE,GAAKxC,MACrBE,KAAMoC,EAASE,GAAKtC,MAHfsC,EAFkB,KAUhC,C","sources":["utils/projects.js","components/ProjectCard.js","components/Projects.js"],"sourcesContent":["const projects = {\r\n  project1: {\r\n    title: \"Exchange Rate App\",\r\n    image: \"\",\r\n    tags: [\"JS\", \"React\", \"Bootstrap\", \"Chart.js,\"],\r\n    text: \"React/JS with use of Chart.js for graph element. This was an exercise of Altcademy. It served as good practice for use of React hooks and use of an API.\",\r\n    repoLink: \"https://github.com/da3491/react-currency-exchange-app\",\r\n    liveLink: \"https://currency-exchange-app-da.herokuapp.com/\",\r\n  },\r\n  project2: {\r\n    title: \"Apple Clone\",\r\n    image: \"apple-clone-image.jpg\",\r\n    tags: [\"JS\", \"React\", \"Bootstrap\", \"Chart.js,\"],\r\n    text: \"Some quick example text to build on the card title and make up the bulk of the card's content. This will express additional information relating to the project.\",\r\n    repoLink: \"\",\r\n    liveLink: \"\",\r\n  },\r\n  project3: {\r\n    title: \"Newsweek Clone\",\r\n    image: \"newsweek-clone-image.jpg\",\r\n    tags: [\"JS\", \"React\", \"Bootstrap\", \"Chart.js,\"],\r\n    text: \"Some quick example text to build on the card title and make up the bulk of the card's content. This will express additional information relating to the project.\",\r\n    repoLink: \"\",\r\n    liveLink: \"\",\r\n  },\r\n};\r\n\r\nexport default projects;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { useTheme } from \"./ThemeContext\";\r\nimport styled from \"styled-components\";\r\n// import CardModal from \"./CardModal\";\r\nconst CardModal = React.lazy(() => import(\"./CardModal\"));\r\n// import Image from \"../images/apple-clone-image.jpg\";\r\n\r\nconst Card = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  background: ${(props) => props.themecolor};\r\n  // background: #333;\r\n  color: white;\r\n  border: 1px solid #333;\r\n  border-radius: 3px;\r\n`;\r\nconst StyledImg = styled.img`\r\n  display: none;\r\n\r\n  // @media (min-width: 550px) {\r\n  //   display: inline;\r\n  //   max-width: 100%;\r\n  //   aspect-ratio: 2/1;\r\n  //   object-fit: cover;\r\n  // }\r\n`;\r\nconst CardInfo = styled.div`\r\n  padding: clamp(0.5em, 0.8em, 1.5em) clamp(0em, 1.5em, 3em);\r\n`;\r\nconst Flex = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\nconst Title = styled.h3`\r\n  font-size: var(--fs-1);\r\n  font-weight: 300;\r\n  margin: 0;\r\n`;\r\nconst StyledTags = styled.span`\r\n  color: ${(props) => props.themecolor};\r\n  font-size: var(--fs--1);\r\n`;\r\nconst Button = styled.button`\r\n  display: inline;\r\n  font-size: var(--fs-0);\r\n  background: ${(props) => props.themecolor};\r\n  color: white;\r\n  border: none;\r\n  border-radius: 3px;\r\n  padding: 0.3em 0.6em;\r\n`;\r\n\r\nconst ProjectCard = ({ title, image, text }) => {\r\n  const theme = useTheme();\r\n  const [visibleModal, setVisibleModal] = useState(false);\r\n\r\n  if (!title) {\r\n    title = \"project1\";\r\n  }\r\n  if (!image) {\r\n    image = \"airbnb-news-clone-image.jpg\";\r\n  }\r\n  if (!text) {\r\n    text = \"Standard text\";\r\n  }\r\n\r\n  return (\r\n    <Card themecolor={theme.colors.darkGrey}>\r\n      <StyledImg\r\n        loading=\"lazy\"\r\n        fetchPriority=\"low\"\r\n        src={require(`../images/${image}`)}\r\n      />\r\n      <CardInfo>\r\n        <Flex>\r\n          <div>\r\n            <Title>{title}</Title>\r\n            <StyledTags themecolor={theme.colors.lightGrey}>\r\n              JS | React | Chart.js | Responsive\r\n            </StyledTags>\r\n          </div>\r\n          <Button\r\n            themecolor={theme.colors.accent}\r\n            onClick={() => setVisibleModal(true)}\r\n          >\r\n            More\r\n          </Button>\r\n        </Flex>\r\n      </CardInfo>\r\n      <React.Suspense>\r\n        {visibleModal && (\r\n          <CardModal\r\n            visible={visibleModal}\r\n            title={title}\r\n            image={image}\r\n            text={text}\r\n            closeModal={() => setVisibleModal(false)}\r\n          />\r\n        )}\r\n      </React.Suspense>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ProjectCard;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport projects from \"../utils/projects.js\";\r\n// import projects from \"../utils/projects-dummy.js\";\r\nimport ProjectCard from \"./ProjectCard.js\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: grid;\r\n  grid-row: 3/5;\r\n  grid-template-columns: 1;\r\n  gap: var(--space-3xs);\r\n`;\r\n\r\nconst Projects = () => {\r\n  return (\r\n    <Container>\r\n      {Object.keys(projects).map((key) => (\r\n        <ProjectCard\r\n          key={key}\r\n          title={projects[key].title}\r\n          image={projects[key].image}\r\n          text={projects[key].text}\r\n        />\r\n      ))}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n"],"names":["project1","title","image","tags","text","repoLink","liveLink","project2","project3","CardModal","React","Card","styled","props","themecolor","StyledImg","CardInfo","Flex","Title","StyledTags","Button","theme","useTheme","useState","visibleModal","setVisibleModal","colors","darkGrey","loading","fetchPriority","src","require","lightGrey","accent","onClick","visible","closeModal","Container","Object","keys","projects","map","key"],"sourceRoot":""}